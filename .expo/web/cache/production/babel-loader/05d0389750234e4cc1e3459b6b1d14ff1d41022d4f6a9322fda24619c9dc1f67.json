{"ast":null,"code":"import{CALLBACK_TYPE}from'../gesture';import{Reanimated}from'../reanimatedWrapper';import{GestureStateManager}from'../gestureStateManager';import{State}from'../../../State';import{TouchEventType}from'../../../TouchEventType';import{tagMessage}from'../../../utils';var _worklet_14910448568644_init_data={code:\"function getHandler_useAnimatedGestureJs1(type,gesture){const{CALLBACK_TYPE}=this.__closure;switch(type){case CALLBACK_TYPE.BEGAN:return gesture.onBegin;case CALLBACK_TYPE.START:return gesture.onStart;case CALLBACK_TYPE.UPDATE:return gesture.onUpdate;case CALLBACK_TYPE.CHANGE:return gesture.onChange;case CALLBACK_TYPE.END:return gesture.onEnd;case CALLBACK_TYPE.FINALIZE:return gesture.onFinalize;case CALLBACK_TYPE.TOUCHES_DOWN:return gesture.onTouchesDown;case CALLBACK_TYPE.TOUCHES_MOVE:return gesture.onTouchesMove;case CALLBACK_TYPE.TOUCHES_UP:return gesture.onTouchesUp;case CALLBACK_TYPE.TOUCHES_CANCELLED:return gesture.onTouchesCancelled;}}\"};var getHandler=function(){var getHandler=function getHandler(type,gesture){switch(type){case CALLBACK_TYPE.BEGAN:return gesture.onBegin;case CALLBACK_TYPE.START:return gesture.onStart;case CALLBACK_TYPE.UPDATE:return gesture.onUpdate;case CALLBACK_TYPE.CHANGE:return gesture.onChange;case CALLBACK_TYPE.END:return gesture.onEnd;case CALLBACK_TYPE.FINALIZE:return gesture.onFinalize;case CALLBACK_TYPE.TOUCHES_DOWN:return gesture.onTouchesDown;case CALLBACK_TYPE.TOUCHES_MOVE:return gesture.onTouchesMove;case CALLBACK_TYPE.TOUCHES_UP:return gesture.onTouchesUp;case CALLBACK_TYPE.TOUCHES_CANCELLED:return gesture.onTouchesCancelled;}};getHandler.__closure={CALLBACK_TYPE:CALLBACK_TYPE};getHandler.__workletHash=14910448568644;getHandler.__initData=_worklet_14910448568644_init_data;return getHandler;}();var _worklet_16609692393031_init_data={code:\"function touchEventTypeToCallbackType_useAnimatedGestureJs2(eventType){const{TouchEventType,CALLBACK_TYPE}=this.__closure;switch(eventType){case TouchEventType.TOUCHES_DOWN:return CALLBACK_TYPE.TOUCHES_DOWN;case TouchEventType.TOUCHES_MOVE:return CALLBACK_TYPE.TOUCHES_MOVE;case TouchEventType.TOUCHES_UP:return CALLBACK_TYPE.TOUCHES_UP;case TouchEventType.TOUCHES_CANCELLED:return CALLBACK_TYPE.TOUCHES_CANCELLED;}return CALLBACK_TYPE.UNDEFINED;}\"};var touchEventTypeToCallbackType=function(){var touchEventTypeToCallbackType=function touchEventTypeToCallbackType(eventType){switch(eventType){case TouchEventType.TOUCHES_DOWN:return CALLBACK_TYPE.TOUCHES_DOWN;case TouchEventType.TOUCHES_MOVE:return CALLBACK_TYPE.TOUCHES_MOVE;case TouchEventType.TOUCHES_UP:return CALLBACK_TYPE.TOUCHES_UP;case TouchEventType.TOUCHES_CANCELLED:return CALLBACK_TYPE.TOUCHES_CANCELLED;}return CALLBACK_TYPE.UNDEFINED;};touchEventTypeToCallbackType.__closure={TouchEventType:TouchEventType,CALLBACK_TYPE:CALLBACK_TYPE};touchEventTypeToCallbackType.__workletHash=16609692393031;touchEventTypeToCallbackType.__initData=_worklet_16609692393031_init_data;return touchEventTypeToCallbackType;}();var _worklet_7414508538409_init_data={code:\"function runWorklet_useAnimatedGestureJs3(type,gesture,event,...args){const{getHandler,tagMessage}=this.__closure;const handler=getHandler(type,gesture);if(gesture.isWorklet[type]){handler===null||handler===void 0?void 0:handler(event,...args);}else if(handler){console.warn(tagMessage('Animated gesture callback must be a worklet'));}}\"};var runWorklet=function(){var runWorklet=function runWorklet(type,gesture,event){var handler=getHandler(type,gesture);if(gesture.isWorklet[type]){for(var _len=arguments.length,args=new Array(_len>3?_len-3:0),_key=3;_key<_len;_key++){args[_key-3]=arguments[_key];}handler===null||handler===void 0?void 0:handler.apply(void 0,[event].concat(args));}else if(handler){console.warn(tagMessage('Animated gesture callback must be a worklet'));}};runWorklet.__closure={getHandler:getHandler,tagMessage:tagMessage};runWorklet.__workletHash=7414508538409;runWorklet.__initData=_worklet_7414508538409_init_data;return runWorklet;}();var _worklet_12439180546276_init_data={code:\"function isStateChangeEvent_useAnimatedGestureJs4(event){return event.oldState!=null;}\"};var isStateChangeEvent=function(){var isStateChangeEvent=function isStateChangeEvent(event){return event.oldState!=null;};isStateChangeEvent.__closure={};isStateChangeEvent.__workletHash=12439180546276;isStateChangeEvent.__initData=_worklet_12439180546276_init_data;return isStateChangeEvent;}();var _worklet_2038954310453_init_data={code:\"function isTouchEvent_useAnimatedGestureJs5(event){return event.eventType!=null;}\"};var isTouchEvent=function(){var isTouchEvent=function isTouchEvent(event){return event.eventType!=null;};isTouchEvent.__closure={};isTouchEvent.__workletHash=2038954310453;isTouchEvent.__initData=_worklet_2038954310453_init_data;return isTouchEvent;}();var _worklet_2760912163768_init_data={code:\"function useAnimatedGestureJs6(event){const{sharedHandlersCallbacks,isStateChangeEvent,State,runWorklet,CALLBACK_TYPE,lastUpdateEvent,isTouchEvent,stateControllers,GestureStateManager,TouchEventType,touchEventTypeToCallbackType}=this.__closure;const currentCallback=sharedHandlersCallbacks.value;if(!currentCallback){return;}for(let i=0;i<currentCallback.length;i++){const gesture=currentCallback[i];if(event.handlerTag!==gesture.handlerTag){continue;}if(isStateChangeEvent(event)){if(event.oldState===State.UNDETERMINED&&event.state===State.BEGAN){runWorklet(CALLBACK_TYPE.BEGAN,gesture,event);}else if((event.oldState===State.BEGAN||event.oldState===State.UNDETERMINED)&&event.state===State.ACTIVE){runWorklet(CALLBACK_TYPE.START,gesture,event);lastUpdateEvent.value[gesture.handlerTag]=undefined;}else if(event.oldState!==event.state&&event.state===State.END){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,true);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,true);}else if((event.state===State.FAILED||event.state===State.CANCELLED)&&event.state!==event.oldState){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,false);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,false);}}else if(isTouchEvent(event)){if(!stateControllers[i]){stateControllers[i]=GestureStateManager.create(event.handlerTag);}if(event.eventType!==TouchEventType.UNDETERMINED){runWorklet(touchEventTypeToCallbackType(event.eventType),gesture,event,stateControllers[i]);}}else{runWorklet(CALLBACK_TYPE.UPDATE,gesture,event);if(gesture.onChange&&gesture.changeEventCalculator){var _gesture$changeEventC;runWorklet(CALLBACK_TYPE.CHANGE,gesture,(_gesture$changeEventC=gesture.changeEventCalculator)===null||_gesture$changeEventC===void 0?void 0:_gesture$changeEventC.call(gesture,event,lastUpdateEvent.value[gesture.handlerTag]));lastUpdateEvent.value[gesture.handlerTag]=event;}}}}\"};export function useAnimatedGesture(preparedGesture,needsRebuild){if(!Reanimated){return;}var sharedHandlersCallbacks=Reanimated.useSharedValue(null);var lastUpdateEvent=Reanimated.useSharedValue([]);var stateControllers=[];var callback=function(){var useAnimatedGestureJs6=function useAnimatedGestureJs6(event){var currentCallback=sharedHandlersCallbacks.value;if(!currentCallback){return;}for(var i=0;i<currentCallback.length;i++){var gesture=currentCallback[i];if(event.handlerTag!==gesture.handlerTag){continue;}if(isStateChangeEvent(event)){if(event.oldState===State.UNDETERMINED&&event.state===State.BEGAN){runWorklet(CALLBACK_TYPE.BEGAN,gesture,event);}else if((event.oldState===State.BEGAN||event.oldState===State.UNDETERMINED)&&event.state===State.ACTIVE){runWorklet(CALLBACK_TYPE.START,gesture,event);lastUpdateEvent.value[gesture.handlerTag]=undefined;}else if(event.oldState!==event.state&&event.state===State.END){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,true);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,true);}else if((event.state===State.FAILED||event.state===State.CANCELLED)&&event.state!==event.oldState){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,false);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,false);}}else if(isTouchEvent(event)){if(!stateControllers[i]){stateControllers[i]=GestureStateManager.create(event.handlerTag);}if(event.eventType!==TouchEventType.UNDETERMINED){runWorklet(touchEventTypeToCallbackType(event.eventType),gesture,event,stateControllers[i]);}}else{runWorklet(CALLBACK_TYPE.UPDATE,gesture,event);if(gesture.onChange&&gesture.changeEventCalculator){var _gesture$changeEventC;runWorklet(CALLBACK_TYPE.CHANGE,gesture,(_gesture$changeEventC=gesture.changeEventCalculator)===null||_gesture$changeEventC===void 0?void 0:_gesture$changeEventC.call(gesture,event,lastUpdateEvent.value[gesture.handlerTag]));lastUpdateEvent.value[gesture.handlerTag]=event;}}}};useAnimatedGestureJs6.__closure={sharedHandlersCallbacks:sharedHandlersCallbacks,isStateChangeEvent:isStateChangeEvent,State:State,runWorklet:runWorklet,CALLBACK_TYPE:CALLBACK_TYPE,lastUpdateEvent:lastUpdateEvent,isTouchEvent:isTouchEvent,stateControllers:stateControllers,GestureStateManager:GestureStateManager,TouchEventType:TouchEventType,touchEventTypeToCallbackType:touchEventTypeToCallbackType};useAnimatedGestureJs6.__workletHash=2760912163768;useAnimatedGestureJs6.__initData=_worklet_2760912163768_init_data;return useAnimatedGestureJs6;}();var event=Reanimated.useEvent(callback,['onGestureHandlerStateChange','onGestureHandlerEvent'],needsRebuild);preparedGesture.animatedEventHandler=event;preparedGesture.animatedHandlers=sharedHandlersCallbacks;}","map":{"version":3,"names":["CALLBACK_TYPE","Reanimated","GestureStateManager","State","TouchEventType","tagMessage","_worklet_14910448568644_init_data","code","getHandler","type","gesture","BEGAN","onBegin","START","onStart","UPDATE","onUpdate","CHANGE","onChange","END","onEnd","FINALIZE","onFinalize","TOUCHES_DOWN","onTouchesDown","TOUCHES_MOVE","onTouchesMove","TOUCHES_UP","onTouchesUp","TOUCHES_CANCELLED","onTouchesCancelled","__closure","__workletHash","__initData","_worklet_16609692393031_init_data","touchEventTypeToCallbackType","eventType","UNDEFINED","_worklet_7414508538409_init_data","runWorklet","event","handler","isWorklet","_len","arguments","length","args","Array","_key","apply","concat","console","warn","_worklet_12439180546276_init_data","isStateChangeEvent","oldState","_worklet_2038954310453_init_data","isTouchEvent","_worklet_2760912163768_init_data","useAnimatedGesture","preparedGesture","needsRebuild","sharedHandlersCallbacks","useSharedValue","lastUpdateEvent","stateControllers","callback","useAnimatedGestureJs6","currentCallback","value","i","handlerTag","UNDETERMINED","state","ACTIVE","undefined","FAILED","CANCELLED","create","changeEventCalculator","_gesture$changeEventC","call","useEvent","animatedEventHandler","animatedHandlers"],"sources":["C:\\Users\\Jorn\\Documents\\hitster\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\GestureDetector\\useAnimatedGesture.ts"],"sourcesContent":["import { HandlerCallbacks, CALLBACK_TYPE } from '../gesture';\nimport { Reanimated } from '../reanimatedWrapper';\nimport {\n  GestureTouchEvent,\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../../gestureHandlerCommon';\nimport {\n  GestureStateManager,\n  GestureStateManagerType,\n} from '../gestureStateManager';\nimport { State } from '../../../State';\nimport { TouchEventType } from '../../../TouchEventType';\nimport { tagMessage } from '../../../utils';\nimport { AttachedGestureState } from './types';\n\nfunction getHandler(\n  type: CALLBACK_TYPE,\n  gesture: HandlerCallbacks<Record<string, unknown>>\n) {\n  'worklet';\n  switch (type) {\n    case CALLBACK_TYPE.BEGAN:\n      return gesture.onBegin;\n    case CALLBACK_TYPE.START:\n      return gesture.onStart;\n    case CALLBACK_TYPE.UPDATE:\n      return gesture.onUpdate;\n    case CALLBACK_TYPE.CHANGE:\n      return gesture.onChange;\n    case CALLBACK_TYPE.END:\n      return gesture.onEnd;\n    case CALLBACK_TYPE.FINALIZE:\n      return gesture.onFinalize;\n    case CALLBACK_TYPE.TOUCHES_DOWN:\n      return gesture.onTouchesDown;\n    case CALLBACK_TYPE.TOUCHES_MOVE:\n      return gesture.onTouchesMove;\n    case CALLBACK_TYPE.TOUCHES_UP:\n      return gesture.onTouchesUp;\n    case CALLBACK_TYPE.TOUCHES_CANCELLED:\n      return gesture.onTouchesCancelled;\n  }\n}\n\nfunction touchEventTypeToCallbackType(\n  eventType: TouchEventType\n): CALLBACK_TYPE {\n  'worklet';\n  switch (eventType) {\n    case TouchEventType.TOUCHES_DOWN:\n      return CALLBACK_TYPE.TOUCHES_DOWN;\n    case TouchEventType.TOUCHES_MOVE:\n      return CALLBACK_TYPE.TOUCHES_MOVE;\n    case TouchEventType.TOUCHES_UP:\n      return CALLBACK_TYPE.TOUCHES_UP;\n    case TouchEventType.TOUCHES_CANCELLED:\n      return CALLBACK_TYPE.TOUCHES_CANCELLED;\n  }\n  return CALLBACK_TYPE.UNDEFINED;\n}\n\nfunction runWorklet(\n  type: CALLBACK_TYPE,\n  gesture: HandlerCallbacks<Record<string, unknown>>,\n  event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent,\n  ...args: unknown[]\n) {\n  'worklet';\n  const handler = getHandler(type, gesture);\n  if (gesture.isWorklet[type]) {\n    // @ts-ignore Logic below makes sure the correct event is send to the\n    // correct handler.\n    handler?.(event, ...args);\n  } else if (handler) {\n    console.warn(tagMessage('Animated gesture callback must be a worklet'));\n  }\n}\n\nfunction isStateChangeEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureStateChangeEvent {\n  'worklet';\n  // @ts-ignore Yes, the oldState prop is missing on GestureTouchEvent, that's the point\n  return event.oldState != null;\n}\n\nfunction isTouchEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureTouchEvent {\n  'worklet';\n  return event.eventType != null;\n}\n\nexport function useAnimatedGesture(\n  preparedGesture: AttachedGestureState,\n  needsRebuild: boolean\n) {\n  if (!Reanimated) {\n    return;\n  }\n\n  // Hooks are called conditionally, but the condition is whether the\n  // react-native-reanimated is installed, which shouldn't change while running\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const sharedHandlersCallbacks = Reanimated.useSharedValue<\n    HandlerCallbacks<Record<string, unknown>>[] | null\n  >(null);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const lastUpdateEvent = Reanimated.useSharedValue<\n    (GestureUpdateEvent | undefined)[]\n  >([]);\n\n  // not every gesture needs a state controller, init them lazily\n  const stateControllers: GestureStateManagerType[] = [];\n\n  const callback = (\n    event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent\n  ) => {\n    'worklet';\n\n    const currentCallback = sharedHandlersCallbacks.value;\n    if (!currentCallback) {\n      return;\n    }\n\n    for (let i = 0; i < currentCallback.length; i++) {\n      const gesture = currentCallback[i];\n\n      if (event.handlerTag !== gesture.handlerTag) {\n        continue;\n      }\n\n      if (isStateChangeEvent(event)) {\n        if (\n          event.oldState === State.UNDETERMINED &&\n          event.state === State.BEGAN\n        ) {\n          runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\n        } else if (\n          (event.oldState === State.BEGAN ||\n            event.oldState === State.UNDETERMINED) &&\n          event.state === State.ACTIVE\n        ) {\n          runWorklet(CALLBACK_TYPE.START, gesture, event);\n          lastUpdateEvent.value[gesture.handlerTag] = undefined;\n        } else if (\n          event.oldState !== event.state &&\n          event.state === State.END\n        ) {\n          if (event.oldState === State.ACTIVE) {\n            runWorklet(CALLBACK_TYPE.END, gesture, event, true);\n          }\n          runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\n        } else if (\n          (event.state === State.FAILED || event.state === State.CANCELLED) &&\n          event.state !== event.oldState\n        ) {\n          if (event.oldState === State.ACTIVE) {\n            runWorklet(CALLBACK_TYPE.END, gesture, event, false);\n          }\n          runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\n        }\n      } else if (isTouchEvent(event)) {\n        if (!stateControllers[i]) {\n          stateControllers[i] = GestureStateManager.create(event.handlerTag);\n        }\n\n        if (event.eventType !== TouchEventType.UNDETERMINED) {\n          runWorklet(\n            touchEventTypeToCallbackType(event.eventType),\n            gesture,\n            event,\n            stateControllers[i]\n          );\n        }\n      } else {\n        runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\n\n        if (gesture.onChange && gesture.changeEventCalculator) {\n          runWorklet(\n            CALLBACK_TYPE.CHANGE,\n            gesture,\n            gesture.changeEventCalculator?.(\n              event,\n              lastUpdateEvent.value[gesture.handlerTag]\n            )\n          );\n\n          lastUpdateEvent.value[gesture.handlerTag] = event;\n        }\n      }\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const event = Reanimated.useEvent(\n    callback,\n    ['onGestureHandlerStateChange', 'onGestureHandlerEvent'],\n    needsRebuild\n  );\n\n  preparedGesture.animatedEventHandler = event;\n  preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}