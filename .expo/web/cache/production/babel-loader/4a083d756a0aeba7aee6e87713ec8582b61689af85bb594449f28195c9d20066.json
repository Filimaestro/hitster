{"ast":null,"code":"'use strict';import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{registerReanimatedError,reportFatalErrorOnJS}from\"./errors.js\";import{DEFAULT_LOGGER_CONFIG,logToLogBoxAndConsole,registerLoggerConfig,replaceLoggerImplementation}from\"./logger/index.js\";import{mockedRequestAnimationFrame}from\"./mockedRequestAnimationFrame.js\";import{isChromeDebugger,isJest,isWeb,shouldBeUseWeb}from\"./PlatformChecker.js\";import{callMicrotasks,executeOnUIRuntimeSync,runOnJS,runOnUIImmediately,setupMicrotasks}from\"./threads.js\";var IS_JEST=isJest();var SHOULD_BE_USE_WEB=shouldBeUseWeb();var IS_CHROME_DEBUGGER=isChromeDebugger();var _worklet_9679568772195_init_data={code:\"function overrideLogFunctionImplementation_initializersJs1(){const{replaceLoggerImplementation,runOnJS,logToLogBoxAndConsole}=this.__closure;replaceLoggerImplementation(function(data){'worklet';runOnJS(logToLogBoxAndConsole)(data);});}\"};var _worklet_6795547978059_init_data={code:\"function initializersJs2(data){const{runOnJS,logToLogBoxAndConsole}=this.__closure;runOnJS(logToLogBoxAndConsole)(data);}\"};var overrideLogFunctionImplementation=function(){var overrideLogFunctionImplementation=function overrideLogFunctionImplementation(){replaceLoggerImplementation(function(){var initializersJs2=function initializersJs2(data){runOnJS(logToLogBoxAndConsole)(data);};initializersJs2.__closure={runOnJS:runOnJS,logToLogBoxAndConsole:logToLogBoxAndConsole};initializersJs2.__workletHash=6795547978059;initializersJs2.__initData=_worklet_6795547978059_init_data;return initializersJs2;}());};overrideLogFunctionImplementation.__closure={replaceLoggerImplementation:replaceLoggerImplementation,runOnJS:runOnJS,logToLogBoxAndConsole:logToLogBoxAndConsole};overrideLogFunctionImplementation.__workletHash=9679568772195;overrideLogFunctionImplementation.__initData=_worklet_9679568772195_init_data;return overrideLogFunctionImplementation;}();registerLoggerConfig(DEFAULT_LOGGER_CONFIG);overrideLogFunctionImplementation();if(SHOULD_BE_USE_WEB){global._WORKLET=false;global._log=console.log;global._getAnimationTimestamp=function(){return performance.now();};}else{executeOnUIRuntimeSync(registerReanimatedError)();executeOnUIRuntimeSync(registerLoggerConfig)(DEFAULT_LOGGER_CONFIG);executeOnUIRuntimeSync(overrideLogFunctionImplementation)();}var _worklet_12552258961364_init_data={code:\"function callGuardDEV_initializersJs3(fn,...args){try{return fn(...args);}catch(e){if(global.__ErrorUtils){global.__ErrorUtils.reportFatalError(e);}else{throw e;}}}\"};export var callGuardDEV=function(){var callGuardDEV=function callGuardDEV(fn){try{for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}return fn.apply(void 0,args);}catch(e){if(global.__ErrorUtils){global.__ErrorUtils.reportFatalError(e);}else{throw e;}}};callGuardDEV.__closure={};callGuardDEV.__workletHash=12552258961364;callGuardDEV.__initData=_worklet_12552258961364_init_data;return callGuardDEV;}();var _worklet_1314697224994_init_data={code:\"function setupCallGuard_initializersJs4(){const{callGuardDEV,runOnJS,reportFatalErrorOnJS}=this.__closure;global.__callGuardDEV=callGuardDEV;global.__ErrorUtils={reportFatalError:function(error){runOnJS(reportFatalErrorOnJS)({message:error.message,stack:error.stack});}};}\"};export var setupCallGuard=function(){var setupCallGuard=function setupCallGuard(){global.__callGuardDEV=callGuardDEV;global.__ErrorUtils={reportFatalError:function reportFatalError(error){runOnJS(reportFatalErrorOnJS)({message:error.message,stack:error.stack});}};};setupCallGuard.__closure={callGuardDEV:callGuardDEV,runOnJS:runOnJS,reportFatalErrorOnJS:reportFatalErrorOnJS};setupCallGuard.__workletHash=1314697224994;setupCallGuard.__initData=_worklet_1314697224994_init_data;return setupCallGuard;}();function createMemorySafeCapturableConsole(){var consoleCopy=Object.fromEntries(Object.entries(console).map(function(_ref){var _ref2=_slicedToArray(_ref,2),methodName=_ref2[0],method=_ref2[1];var methodWrapper=function methodWrapper(){return method.apply(void 0,arguments);};if(method.name){Object.defineProperty(methodWrapper,'name',{value:method.name,writable:false});}return[methodName,methodWrapper];}));return consoleCopy;}var capturableConsole=createMemorySafeCapturableConsole();var _worklet_10507102748750_init_data={code:\"function setupConsole_initializersJs5(){const{IS_CHROME_DEBUGGER,runOnJS,capturableConsole}=this.__closure;if(!IS_CHROME_DEBUGGER){global.console={assert:runOnJS(capturableConsole.assert),debug:runOnJS(capturableConsole.debug),log:runOnJS(capturableConsole.log),warn:runOnJS(capturableConsole.warn),error:runOnJS(capturableConsole.error),info:runOnJS(capturableConsole.info)};}}\"};export var setupConsole=function(){var setupConsole=function setupConsole(){if(!IS_CHROME_DEBUGGER){global.console={assert:runOnJS(capturableConsole.assert),debug:runOnJS(capturableConsole.debug),log:runOnJS(capturableConsole.log),warn:runOnJS(capturableConsole.warn),error:runOnJS(capturableConsole.error),info:runOnJS(capturableConsole.info)};}};setupConsole.__closure={IS_CHROME_DEBUGGER:IS_CHROME_DEBUGGER,runOnJS:runOnJS,capturableConsole:capturableConsole};setupConsole.__workletHash=10507102748750;setupConsole.__initData=_worklet_10507102748750_init_data;return setupConsole;}();var _worklet_14501637616922_init_data={code:\"function setupRequestAnimationFrame_initializersJs6(){const{callMicrotasks}=this.__closure;const nativeRequestAnimationFrame=global.requestAnimationFrame;let animationFrameCallbacks=[];let flushRequested=false;global.__flushAnimationFrame=function(frameTimestamp){const currentCallbacks=animationFrameCallbacks;animationFrameCallbacks=[];currentCallbacks.forEach(function(f){return f(frameTimestamp);});callMicrotasks();};global.requestAnimationFrame=function(callback){animationFrameCallbacks.push(callback);if(!flushRequested){flushRequested=true;nativeRequestAnimationFrame(function(timestamp){flushRequested=false;global.__frameTimestamp=timestamp;global.__flushAnimationFrame(timestamp);global.__frameTimestamp=undefined;});}return-1;};}\"};var setupRequestAnimationFrame=function(){var setupRequestAnimationFrame=function setupRequestAnimationFrame(){var nativeRequestAnimationFrame=global.requestAnimationFrame;var animationFrameCallbacks=[];var flushRequested=false;global.__flushAnimationFrame=function(frameTimestamp){var currentCallbacks=animationFrameCallbacks;animationFrameCallbacks=[];currentCallbacks.forEach(function(f){return f(frameTimestamp);});callMicrotasks();};global.requestAnimationFrame=function(callback){animationFrameCallbacks.push(callback);if(!flushRequested){flushRequested=true;nativeRequestAnimationFrame(function(timestamp){flushRequested=false;global.__frameTimestamp=timestamp;global.__flushAnimationFrame(timestamp);global.__frameTimestamp=undefined;});}return-1;};};setupRequestAnimationFrame.__closure={callMicrotasks:callMicrotasks};setupRequestAnimationFrame.__workletHash=14501637616922;setupRequestAnimationFrame.__initData=_worklet_14501637616922_init_data;return setupRequestAnimationFrame;}();var _worklet_7445344660080_init_data={code:\"function initializersJs7(){const{setupCallGuard,setupConsole,SHOULD_BE_USE_WEB,setupMicrotasks,setupRequestAnimationFrame}=this.__closure;setupCallGuard();setupConsole();if(!SHOULD_BE_USE_WEB){setupMicrotasks();setupRequestAnimationFrame();}}\"};export function initializeUIRuntime(ReanimatedModule){if(isWeb()){return;}if(!ReanimatedModule){throw new Error('[Reanimated] Reanimated is trying to initialize the UI runtime without a valid ReanimatedModule');}if(IS_JEST){globalThis.requestAnimationFrame=mockedRequestAnimationFrame;}runOnUIImmediately(function(){var initializersJs7=function initializersJs7(){setupCallGuard();setupConsole();if(!SHOULD_BE_USE_WEB){setupMicrotasks();setupRequestAnimationFrame();}};initializersJs7.__closure={setupCallGuard:setupCallGuard,setupConsole:setupConsole,SHOULD_BE_USE_WEB:SHOULD_BE_USE_WEB,setupMicrotasks:setupMicrotasks,setupRequestAnimationFrame:setupRequestAnimationFrame};initializersJs7.__workletHash=7445344660080;initializersJs7.__initData=_worklet_7445344660080_init_data;return initializersJs7;}())();}","map":{"version":3,"names":["_slicedToArray","registerReanimatedError","reportFatalErrorOnJS","DEFAULT_LOGGER_CONFIG","logToLogBoxAndConsole","registerLoggerConfig","replaceLoggerImplementation","mockedRequestAnimationFrame","isChromeDebugger","isJest","isWeb","shouldBeUseWeb","callMicrotasks","executeOnUIRuntimeSync","runOnJS","runOnUIImmediately","setupMicrotasks","IS_JEST","SHOULD_BE_USE_WEB","IS_CHROME_DEBUGGER","_worklet_9679568772195_init_data","code","_worklet_6795547978059_init_data","overrideLogFunctionImplementation","initializersJs2","data","__closure","__workletHash","__initData","global","_WORKLET","_log","console","log","_getAnimationTimestamp","performance","now","_worklet_12552258961364_init_data","callGuardDEV","fn","_len","arguments","length","args","Array","_key","apply","e","__ErrorUtils","reportFatalError","_worklet_1314697224994_init_data","setupCallGuard","__callGuardDEV","error","message","stack","createMemorySafeCapturableConsole","consoleCopy","Object","fromEntries","entries","map","_ref","_ref2","methodName","method","methodWrapper","name","defineProperty","value","writable","capturableConsole","_worklet_10507102748750_init_data","setupConsole","assert","debug","warn","info","_worklet_14501637616922_init_data","setupRequestAnimationFrame","nativeRequestAnimationFrame","requestAnimationFrame","animationFrameCallbacks","flushRequested","__flushAnimationFrame","frameTimestamp","currentCallbacks","forEach","f","callback","push","timestamp","__frameTimestamp","undefined","_worklet_7445344660080_init_data","initializeUIRuntime","ReanimatedModule","Error","globalThis","initializersJs7"],"sources":["C:\\Users\\Jorn\\Documents\\hitster\\node_modules\\react-native-reanimated\\src\\initializers.ts"],"sourcesContent":["'use strict';\nimport type { IReanimatedModule } from './commonTypes';\nimport { registerReanimatedError, reportFatalErrorOnJS } from './errors';\nimport {\n  DEFAULT_LOGGER_CONFIG,\n  logToLogBoxAndConsole,\n  registerLoggerConfig,\n  replaceLoggerImplementation,\n} from './logger';\nimport { mockedRequestAnimationFrame } from './mockedRequestAnimationFrame';\nimport {\n  isChromeDebugger,\n  isJest,\n  isWeb,\n  shouldBeUseWeb,\n} from './PlatformChecker';\nimport {\n  callMicrotasks,\n  executeOnUIRuntimeSync,\n  runOnJS,\n  runOnUIImmediately,\n  setupMicrotasks,\n} from './threads';\n\nconst IS_JEST = isJest();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\nconst IS_CHROME_DEBUGGER = isChromeDebugger();\n\n// Override the logFunction implementation with the one that adds logs\n// with better stack traces to the LogBox (need to override it after `runOnJS`\n// is defined).\nfunction overrideLogFunctionImplementation() {\n  'worklet';\n  replaceLoggerImplementation((data) => {\n    'worklet';\n    runOnJS(logToLogBoxAndConsole)(data);\n  });\n}\n\n// Register logger config and replace the log function implementation in\n// the React runtime global scope\nregisterLoggerConfig(DEFAULT_LOGGER_CONFIG);\noverrideLogFunctionImplementation();\n\n// this is for web implementation\nif (SHOULD_BE_USE_WEB) {\n  global._WORKLET = false;\n  global._log = console.log;\n  global._getAnimationTimestamp = () => performance.now();\n} else {\n  // Register ReanimatedError and logger config in the UI runtime global scope.\n  // (we are using `executeOnUIRuntimeSync` here to make sure that the changes\n  // are applied before any async operations are executed on the UI runtime)\n  executeOnUIRuntimeSync(registerReanimatedError)();\n  executeOnUIRuntimeSync(registerLoggerConfig)(DEFAULT_LOGGER_CONFIG);\n  executeOnUIRuntimeSync(overrideLogFunctionImplementation)();\n}\n\n// callGuard is only used with debug builds\nexport function callGuardDEV<Args extends unknown[], ReturnValue>(\n  fn: (...args: Args) => ReturnValue,\n  ...args: Args\n): ReturnValue | void {\n  'worklet';\n  try {\n    return fn(...args);\n  } catch (e) {\n    if (global.__ErrorUtils) {\n      global.__ErrorUtils.reportFatalError(e as Error);\n    } else {\n      throw e;\n    }\n  }\n}\n\nexport function setupCallGuard() {\n  'worklet';\n  global.__callGuardDEV = callGuardDEV;\n  global.__ErrorUtils = {\n    reportFatalError: (error: Error) => {\n      runOnJS(reportFatalErrorOnJS)({\n        message: error.message,\n        stack: error.stack,\n      });\n    },\n  };\n}\n\n/**\n * Currently there seems to be a bug in the JSI layer which causes a crash when\n * we try to copy some of the console methods, i.e. `clear` or `dirxml`.\n *\n * The crash happens only in React Native 0.75. It's not reproducible in neither\n * 0.76 nor 0.74. It also happens only in the configuration of a debug app and\n * production bundle.\n *\n * I haven't yet discovered what exactly causes the crash. It's tied to the\n * console methods sometimes being `HostFunction`s. Therefore, as a workaround\n * we don't copy the methods as they are in the original console object, we copy\n * JavaScript wrappers instead.\n */\nfunction createMemorySafeCapturableConsole(): typeof console {\n  const consoleCopy = Object.fromEntries(\n    Object.entries(console).map(([methodName, method]) => {\n      const methodWrapper = function methodWrapper(...args: unknown[]) {\n        return method(...args);\n      };\n      if (method.name) {\n        /**\n         * Set the original method name as the wrapper name if available.\n         *\n         * It might be unnecessary but if we want to fully mimic the console\n         * object we should take into the account the fact some code might rely\n         * on the method name.\n         */\n        Object.defineProperty(methodWrapper, 'name', {\n          value: method.name,\n          writable: false,\n        });\n      }\n      return [methodName, methodWrapper];\n    })\n  );\n\n  return consoleCopy as unknown as typeof console;\n}\n\n// We really have to create a copy of console here. Function runOnJS we use on elements inside\n// this object makes it not configurable\nconst capturableConsole = createMemorySafeCapturableConsole();\n\nexport function setupConsole() {\n  'worklet';\n  if (!IS_CHROME_DEBUGGER) {\n    // @ts-ignore TypeScript doesn't like that there are missing methods in console object, but we don't provide all the methods for the UI runtime console version\n    global.console = {\n      /* eslint-disable @typescript-eslint/unbound-method */\n      assert: runOnJS(capturableConsole.assert),\n      debug: runOnJS(capturableConsole.debug),\n      log: runOnJS(capturableConsole.log),\n      warn: runOnJS(capturableConsole.warn),\n      error: runOnJS(capturableConsole.error),\n      info: runOnJS(capturableConsole.info),\n      /* eslint-enable @typescript-eslint/unbound-method */\n    };\n  }\n}\n\nfunction setupRequestAnimationFrame() {\n  'worklet';\n\n  // Jest mocks requestAnimationFrame API and it does not like if that mock gets overridden\n  // so we avoid doing requestAnimationFrame batching in Jest environment.\n  const nativeRequestAnimationFrame = global.requestAnimationFrame;\n\n  let animationFrameCallbacks: Array<(timestamp: number) => void> = [];\n  let flushRequested = false;\n\n  global.__flushAnimationFrame = (frameTimestamp: number) => {\n    const currentCallbacks = animationFrameCallbacks;\n    animationFrameCallbacks = [];\n    currentCallbacks.forEach((f) => f(frameTimestamp));\n    callMicrotasks();\n  };\n\n  global.requestAnimationFrame = (\n    callback: (timestamp: number) => void\n  ): number => {\n    animationFrameCallbacks.push(callback);\n    if (!flushRequested) {\n      flushRequested = true;\n      nativeRequestAnimationFrame((timestamp) => {\n        flushRequested = false;\n        global.__frameTimestamp = timestamp;\n        global.__flushAnimationFrame(timestamp);\n        global.__frameTimestamp = undefined;\n      });\n    }\n    // Reanimated currently does not support cancelling callbacks requested with\n    // requestAnimationFrame. We return -1 as identifier which isn't in line\n    // with the spec but it should give users better clue in case they actually\n    // attempt to store the value returned from rAF and use it for cancelling.\n    return -1;\n  };\n}\n\nexport function initializeUIRuntime(ReanimatedModule: IReanimatedModule) {\n  if (isWeb()) {\n    return;\n  }\n  if (!ReanimatedModule) {\n    // eslint-disable-next-line reanimated/use-reanimated-error\n    throw new Error(\n      '[Reanimated] Reanimated is trying to initialize the UI runtime without a valid ReanimatedModule'\n    );\n  }\n  if (IS_JEST) {\n    // requestAnimationFrame react-native jest's setup is incorrect as it polyfills\n    // the method directly using setTimeout, therefore the callback doesn't get the\n    // expected timestamp as the only argument: https://github.com/facebook/react-native/blob/main/packages/react-native/jest/setup.js#L28\n    // We override this setup here to make sure that callbacks get the proper timestamps\n    // when executed. For non-jest environments we define requestAnimationFrame in setupRequestAnimationFrame\n    // @ts-ignore TypeScript uses Node definition for rAF, setTimeout, etc which returns a Timeout object rather than a number\n    globalThis.requestAnimationFrame = mockedRequestAnimationFrame;\n  }\n\n  runOnUIImmediately(() => {\n    'worklet';\n    setupCallGuard();\n    setupConsole();\n    if (!SHOULD_BE_USE_WEB) {\n      setupMicrotasks();\n      setupRequestAnimationFrame();\n    }\n  })();\n}\n"],"mappings":"AAAA,YAAY,QAAAA,cAAA,4CAEZ,OAASC,uBAAuB,CAAEC,oBAAoB,KAAQ,aAAU,CACxE,OACEC,qBAAqB,CACrBC,qBAAqB,CACrBC,oBAAoB,CACpBC,2BAA2B,KACtB,mBAAU,CACjB,OAASC,2BAA2B,KAAQ,kCAA+B,CAC3E,OACEC,gBAAgB,CAChBC,MAAM,CACNC,KAAK,CACLC,cAAc,KACT,sBAAmB,CAC1B,OACEC,cAAc,CACdC,sBAAsB,CACtBC,OAAO,CACPC,kBAAkB,CAClBC,eAAe,KACV,cAAW,CAElB,GAAM,CAAAC,OAAO,CAAGR,MAAM,CAAC,CAAC,CACxB,GAAM,CAAAS,iBAAiB,CAAGP,cAAc,CAAC,CAAC,CAC1C,GAAM,CAAAQ,kBAAkB,CAAGX,gBAAgB,CAAC,CAAC,KAAAY,gCAAA,EAAAC,IAAA,oPAAAC,gCAAA,EAAAD,IAAA,kIAAAE,iCAAA,CAK7C,eAAAA,iCAAA,UAAAA,kCAAA,CAA6C,CAE3CjB,2BAA2B,CAAE,eAAAkB,eAAA,UAAAA,gBAAAC,IAAI,CAAK,CAEpCX,OAAO,CAACV,qBAAqB,CAAC,CAACqB,IAAI,CAAC,CACtC,CAAC,CAAAD,eAAA,CAAAE,SAAA,EAAAZ,OAAA,CADCA,OAAO,CAAAV,qBAAA,CAACA,qBAAqB,EAAAoB,eAAA,CAAAG,aAAA,eAAAH,eAAA,CAAAI,UAAA,CAAAN,gCAAA,QAAAE,eAAA,EAFF,EAG5B,CAAC,CACJ,EAAAD,iCAAA,CAAAG,SAAA,EAAApB,2BAAA,CAJEA,2BAA2B,CAAAQ,OAAA,CAEzBA,OAAO,CAAAV,qBAAA,CAACA,qBAAqB,EAAAmB,iCAAA,CAAAI,aAAA,eAAAJ,iCAAA,CAAAK,UAAA,CAAAR,gCAAA,QAAAG,iCAAA,EAJjC,GAUAlB,oBAAoB,CAACF,qBAAqB,CAAC,CAC3CoB,iCAAiC,CAAC,CAAC,CAGnC,GAAIL,iBAAiB,CAAE,CACrBW,MAAM,CAACC,QAAQ,CAAG,KAAK,CACvBD,MAAM,CAACE,IAAI,CAAGC,OAAO,CAACC,GAAG,CACzBJ,MAAM,CAACK,sBAAsB,CAAG,iBAAM,CAAAC,WAAW,CAACC,GAAG,CAAC,CAAC,GACzD,CAAC,IAAM,CAILvB,sBAAsB,CAACZ,uBAAuB,CAAC,CAAC,CAAC,CACjDY,sBAAsB,CAACR,oBAAoB,CAAC,CAACF,qBAAqB,CAAC,CACnEU,sBAAsB,CAACU,iCAAiC,CAAC,CAAC,CAAC,CAC7D,KAAAc,iCAAA,EAAAhB,IAAA,yKAGA,WAAAiB,YAAA,CAAO,eAAAA,YAAA,UAAAA,aACLC,EAAkC,CAEd,CAEpB,GAAI,SAAAC,IAAA,CAAAC,SAAA,CAAAC,MAAA,CAHDC,IAAU,KAAAC,KAAA,CAAAJ,IAAA,GAAAA,IAAA,MAAAK,IAAA,GAAAA,IAAA,CAAAL,IAAA,CAAAK,IAAA,IAAVF,IAAU,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA,GAIX,MAAO,CAAAN,EAAE,CAAAO,KAAA,QAAIH,IAAI,CAAC,CACpB,CAAE,MAAOI,CAAC,CAAE,CACV,GAAIlB,MAAM,CAACmB,YAAY,CAAE,CACvBnB,MAAM,CAACmB,YAAY,CAACC,gBAAgB,CAACF,CAAU,CAAC,CAClD,CAAC,IAAM,CACL,KAAM,CAAAA,CAAC,CACT,CACF,CACF,EAAAT,YAAA,CAAAZ,SAAA,IAAAY,YAAA,CAAAX,aAAA,gBAAAW,YAAA,CAAAV,UAAA,CAAAS,iCAAA,QAAAC,YAAA,EAdO,GAcP,IAAAY,gCAAA,EAAA7B,IAAA,qRAEA,WAAA8B,cAAA,CAAO,eAAAA,cAAA,UAAAA,eAAA,CAA0B,CAE/BtB,MAAM,CAACuB,cAAc,CAAGd,YAAY,CACpCT,MAAM,CAACmB,YAAY,CAAG,CACpBC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAGI,KAAY,CAAK,CAClCvC,OAAO,CAACZ,oBAAoB,CAAC,CAAC,CAC5BoD,OAAO,CAAED,KAAK,CAACC,OAAO,CACtBC,KAAK,CAAEF,KAAK,CAACE,KACf,CAAC,CAAC,CACJ,CACF,CAAC,CACH,EAAAJ,cAAA,CAAAzB,SAAA,EAAAY,YAAA,CAT0BA,YAAY,CAAAxB,OAAA,CAGhCA,OAAO,CAAAZ,oBAAA,CAACA,oBAAoB,EAAAiD,cAAA,CAAAxB,aAAA,eAAAwB,cAAA,CAAAvB,UAAA,CAAAsB,gCAAA,QAAAC,cAAA,EAL3B,GA0BP,QAAS,CAAAK,iCAAiCA,CAAA,CAAmB,CAC3D,GAAM,CAAAC,WAAW,CAAGC,MAAM,CAACC,WAAW,CACpCD,MAAM,CAACE,OAAO,CAAC5B,OAAO,CAAC,CAAC6B,GAAG,CAAC,SAAAC,IAAA,CAA0B,KAAAC,KAAA,CAAA/D,cAAA,CAAA8D,IAAA,IAAxBE,UAAU,CAAAD,KAAA,IAAEE,MAAM,CAAAF,KAAA,IAC9C,GAAM,CAAAG,aAAa,CAAG,QAAS,CAAAA,aAAaA,CAAA,CAAqB,CAC/D,MAAO,CAAAD,MAAM,CAAAnB,KAAA,QAAAL,SAAQ,CAAC,CACxB,CAAC,CACD,GAAIwB,MAAM,CAACE,IAAI,CAAE,CAQfT,MAAM,CAACU,cAAc,CAACF,aAAa,CAAE,MAAM,CAAE,CAC3CG,KAAK,CAAEJ,MAAM,CAACE,IAAI,CAClBG,QAAQ,CAAE,KACZ,CAAC,CAAC,CACJ,CACA,MAAO,CAACN,UAAU,CAAEE,aAAa,CAAC,CACpC,CAAC,CACH,CAAC,CAED,MAAO,CAAAT,WAAW,CACpB,CAIA,GAAM,CAAAc,iBAAiB,CAAGf,iCAAiC,CAAC,CAAC,KAAAgB,iCAAA,EAAAnD,IAAA,+XAE7D,WAAAoD,YAAA,CAAO,eAAAA,YAAA,UAAAA,aAAA,CAAwB,CAE7B,GAAI,CAACtD,kBAAkB,CAAE,CAEvBU,MAAM,CAACG,OAAO,CAAG,CAEf0C,MAAM,CAAE5D,OAAO,CAACyD,iBAAiB,CAACG,MAAM,CAAC,CACzCC,KAAK,CAAE7D,OAAO,CAACyD,iBAAiB,CAACI,KAAK,CAAC,CACvC1C,GAAG,CAAEnB,OAAO,CAACyD,iBAAiB,CAACtC,GAAG,CAAC,CACnC2C,IAAI,CAAE9D,OAAO,CAACyD,iBAAiB,CAACK,IAAI,CAAC,CACrCvB,KAAK,CAAEvC,OAAO,CAACyD,iBAAiB,CAAClB,KAAK,CAAC,CACvCwB,IAAI,CAAE/D,OAAO,CAACyD,iBAAiB,CAACM,IAAI,CAEtC,CAAC,CACH,CACF,EAAAJ,YAAA,CAAA/C,SAAA,EAAAP,kBAAA,CAbOA,kBAAkB,CAAAL,OAAA,CAIXA,OAAO,CAAAyD,iBAAA,CAACA,iBAAiB,EAAAE,YAAA,CAAA9C,aAAA,gBAAA8C,YAAA,CAAA7C,UAAA,CAAA4C,iCAAA,QAAAC,YAAA,EANhC,GAeP,IAAAK,iCAAA,EAAAzD,IAAA,+uBAAA0D,0BAAA,CAEA,eAAAA,0BAAA,UAAAA,2BAAA,CAAsC,CAKpC,GAAM,CAAAC,2BAA2B,CAAGnD,MAAM,CAACoD,qBAAqB,CAEhE,GAAI,CAAAC,uBAA2D,CAAG,EAAE,CACpE,GAAI,CAAAC,cAAc,CAAG,KAAK,CAE1BtD,MAAM,CAACuD,qBAAqB,CAAI,SAAAC,cAAsB,CAAK,CACzD,GAAM,CAAAC,gBAAgB,CAAGJ,uBAAuB,CAChDA,uBAAuB,CAAG,EAAE,CAC5BI,gBAAgB,CAACC,OAAO,CAAE,SAAAC,CAAC,QAAK,CAAAA,CAAC,CAACH,cAAc,CAAC,GAAC,CAClDzE,cAAc,CAAC,CAAC,CAClB,CAAC,CAEDiB,MAAM,CAACoD,qBAAqB,CAC1B,SAAAQ,QAAqC,CAC1B,CACXP,uBAAuB,CAACQ,IAAI,CAACD,QAAQ,CAAC,CACtC,GAAI,CAACN,cAAc,CAAE,CACnBA,cAAc,CAAG,IAAI,CACrBH,2BAA2B,CAAE,SAAAW,SAAS,CAAK,CACzCR,cAAc,CAAG,KAAK,CACtBtD,MAAM,CAAC+D,gBAAgB,CAAGD,SAAS,CACnC9D,MAAM,CAACuD,qBAAqB,CAACO,SAAS,CAAC,CACvC9D,MAAM,CAAC+D,gBAAgB,CAAGC,SAAS,CACrC,CAAC,CAAC,CACJ,CAKA,MAAO,CAAC,CAAC,CACX,CAAC,CACH,EAAAd,0BAAA,CAAArD,SAAA,EAAAd,cAAA,CAtBIA,cAAc,EAAAmE,0BAAA,CAAApD,aAAA,gBAAAoD,0BAAA,CAAAnD,UAAA,CAAAkD,iCAAA,QAAAC,0BAAA,EAdlB,OAAAe,gCAAA,EAAAzE,IAAA,uPAsCA,MAAO,SAAS,CAAA0E,mBAAmBA,CAACC,gBAAmC,CAAE,CACvE,GAAItF,KAAK,CAAC,CAAC,CAAE,CACX,OACF,CACA,GAAI,CAACsF,gBAAgB,CAAE,CAErB,KAAM,IAAI,CAAAC,KAAK,CACb,iGACF,CAAC,CACH,CACA,GAAIhF,OAAO,CAAE,CAOXiF,UAAU,CAACjB,qBAAqB,CAAG1E,2BAA2B,CAChE,CAEAQ,kBAAkB,CAAC,eAAAoF,eAAA,UAAAA,gBAAA,CAAM,CAEvBhD,cAAc,CAAC,CAAC,CAChBsB,YAAY,CAAC,CAAC,CACd,GAAI,CAACvD,iBAAiB,CAAE,CACtBF,eAAe,CAAC,CAAC,CACjB+D,0BAA0B,CAAC,CAAC,CAC9B,CACF,CAAC,CAAAoB,eAAA,CAAAzE,SAAA,EAAAyB,cAAA,CANCA,cAAc,CAAAsB,YAAA,CACdA,YAAY,CAAAvD,iBAAA,CACPA,iBAAiB,CAAAF,eAAA,CACpBA,eAAe,CAAA+D,0BAAA,CACfA,0BAA0B,EAAAoB,eAAA,CAAAxE,aAAA,eAAAwE,eAAA,CAAAvE,UAAA,CAAAkE,gCAAA,QAAAK,eAAA,EANX,EAQlB,CAAC,CAAC,CAAC,CACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}