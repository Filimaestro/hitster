{"ast":null,"code":"'use strict';import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import Sensor from\"./Sensor.js\";export var SensorContainer=function(){function SensorContainer(){_classCallCheck(this,SensorContainer);this.nativeSensors=new Map();}return _createClass(SensorContainer,[{key:\"getSensorId\",value:function getSensorId(sensorType,config){return sensorType*100+config.iosReferenceFrame*10+Number(config.adjustToInterfaceOrientation);}},{key:\"initializeSensor\",value:function initializeSensor(sensorType,config){var sensorId=this.getSensorId(sensorType,config);if(!this.nativeSensors.has(sensorId)){var newSensor=new Sensor(sensorType,config);this.nativeSensors.set(sensorId,newSensor);}var sensor=this.nativeSensors.get(sensorId);return sensor.getSharedValue();}},{key:\"registerSensor\",value:function registerSensor(sensorType,config,handler){var sensorId=this.getSensorId(sensorType,config);if(!this.nativeSensors.has(sensorId)){return-1;}var sensor=this.nativeSensors.get(sensorId);if(sensor&&sensor.isAvailable()&&(sensor.isRunning()||sensor.register(handler))){sensor.listenersNumber++;return sensorId;}return-1;}},{key:\"unregisterSensor\",value:function unregisterSensor(sensorId){if(this.nativeSensors.has(sensorId)){var sensor=this.nativeSensors.get(sensorId);if(sensor&&sensor.isRunning()){sensor.listenersNumber--;if(sensor.listenersNumber===0){sensor.unregister();}}}}}]);}();","map":{"version":3,"names":["_classCallCheck","_createClass","Sensor","SensorContainer","nativeSensors","Map","key","value","getSensorId","sensorType","config","iosReferenceFrame","Number","adjustToInterfaceOrientation","initializeSensor","sensorId","has","newSensor","set","sensor","get","getSharedValue","registerSensor","handler","isAvailable","isRunning","register","listenersNumber","unregisterSensor","unregister"],"sources":["C:\\Users\\Jorn\\Documents\\hitster\\node_modules\\react-native-reanimated\\src\\SensorContainer.ts"],"sourcesContent":["'use strict';\nimport type {\n  SensorConfig,\n  SensorType,\n  ShareableRef,\n  SharedValue,\n  Value3D,\n  ValueRotation,\n} from './commonTypes';\nimport Sensor from './Sensor';\n\nexport class SensorContainer {\n  private nativeSensors: Map<number, Sensor> = new Map();\n\n  getSensorId(sensorType: SensorType, config: SensorConfig) {\n    return (\n      sensorType * 100 +\n      config.iosReferenceFrame * 10 +\n      Number(config.adjustToInterfaceOrientation)\n    );\n  }\n\n  initializeSensor(\n    sensorType: SensorType,\n    config: SensorConfig\n  ): SharedValue<Value3D | ValueRotation> {\n    const sensorId = this.getSensorId(sensorType, config);\n\n    if (!this.nativeSensors.has(sensorId)) {\n      const newSensor = new Sensor(sensorType, config);\n      this.nativeSensors.set(sensorId, newSensor);\n    }\n\n    const sensor = this.nativeSensors.get(sensorId);\n    return sensor!.getSharedValue();\n  }\n\n  registerSensor(\n    sensorType: SensorType,\n    config: SensorConfig,\n    handler: ShareableRef<(data: Value3D | ValueRotation) => void>\n  ): number {\n    const sensorId = this.getSensorId(sensorType, config);\n\n    if (!this.nativeSensors.has(sensorId)) {\n      return -1;\n    }\n\n    const sensor = this.nativeSensors.get(sensorId);\n    if (\n      sensor &&\n      sensor.isAvailable() &&\n      (sensor.isRunning() || sensor.register(handler))\n    ) {\n      sensor.listenersNumber++;\n      return sensorId;\n    }\n    return -1;\n  }\n\n  unregisterSensor(sensorId: number) {\n    if (this.nativeSensors.has(sensorId)) {\n      const sensor = this.nativeSensors.get(sensorId);\n      if (sensor && sensor.isRunning()) {\n        sensor.listenersNumber--;\n        if (sensor.listenersNumber === 0) {\n          sensor.unregister();\n        }\n      }\n    }\n  }\n}\n"],"mappings":"AAAA,YAAY,QAAAA,eAAA,oDAAAC,YAAA,0CASZ,MAAO,CAAAC,MAAM,KAAM,aAAU,CAE7B,UAAa,CAAAC,eAAe,qBAAAA,gBAAA,EAAAH,eAAA,MAAAG,eAAA,OAClBC,aAAa,CAAwB,GAAI,CAAAC,GAAG,CAAC,CAAC,SAAAJ,YAAA,CAAAE,eAAA,GAAAG,GAAA,eAAAC,KAAA,CAEtD,SAAAC,WAAWA,CAACC,UAAsB,CAAEC,MAAoB,CAAE,CACxD,MACE,CAAAD,UAAU,CAAG,GAAG,CAChBC,MAAM,CAACC,iBAAiB,CAAG,EAAE,CAC7BC,MAAM,CAACF,MAAM,CAACG,4BAA4B,CAAC,CAE/C,IAAAP,GAAA,oBAAAC,KAAA,CAEA,SAAAO,gBAAgBA,CACdL,UAAsB,CACtBC,MAAoB,CACkB,CACtC,GAAM,CAAAK,QAAQ,CAAG,IAAI,CAACP,WAAW,CAACC,UAAU,CAAEC,MAAM,CAAC,CAErD,GAAI,CAAC,IAAI,CAACN,aAAa,CAACY,GAAG,CAACD,QAAQ,CAAC,CAAE,CACrC,GAAM,CAAAE,SAAS,CAAG,GAAI,CAAAf,MAAM,CAACO,UAAU,CAAEC,MAAM,CAAC,CAChD,IAAI,CAACN,aAAa,CAACc,GAAG,CAACH,QAAQ,CAAEE,SAAS,CAAC,CAC7C,CAEA,GAAM,CAAAE,MAAM,CAAG,IAAI,CAACf,aAAa,CAACgB,GAAG,CAACL,QAAQ,CAAC,CAC/C,MAAO,CAAAI,MAAM,CAAEE,cAAc,CAAC,CAAC,CACjC,IAAAf,GAAA,kBAAAC,KAAA,CAEA,SAAAe,cAAcA,CACZb,UAAsB,CACtBC,MAAoB,CACpBa,OAA8D,CACtD,CACR,GAAM,CAAAR,QAAQ,CAAG,IAAI,CAACP,WAAW,CAACC,UAAU,CAAEC,MAAM,CAAC,CAErD,GAAI,CAAC,IAAI,CAACN,aAAa,CAACY,GAAG,CAACD,QAAQ,CAAC,CAAE,CACrC,MAAO,CAAC,CAAC,CACX,CAEA,GAAM,CAAAI,MAAM,CAAG,IAAI,CAACf,aAAa,CAACgB,GAAG,CAACL,QAAQ,CAAC,CAC/C,GACEI,MAAM,EACNA,MAAM,CAACK,WAAW,CAAC,CAAC,GACnBL,MAAM,CAACM,SAAS,CAAC,CAAC,EAAIN,MAAM,CAACO,QAAQ,CAACH,OAAO,CAAC,CAAC,CAChD,CACAJ,MAAM,CAACQ,eAAe,EAAE,CACxB,MAAO,CAAAZ,QAAQ,CACjB,CACA,MAAO,CAAC,CAAC,CACX,IAAAT,GAAA,oBAAAC,KAAA,CAEA,SAAAqB,gBAAgBA,CAACb,QAAgB,CAAE,CACjC,GAAI,IAAI,CAACX,aAAa,CAACY,GAAG,CAACD,QAAQ,CAAC,CAAE,CACpC,GAAM,CAAAI,MAAM,CAAG,IAAI,CAACf,aAAa,CAACgB,GAAG,CAACL,QAAQ,CAAC,CAC/C,GAAII,MAAM,EAAIA,MAAM,CAACM,SAAS,CAAC,CAAC,CAAE,CAChCN,MAAM,CAACQ,eAAe,EAAE,CACxB,GAAIR,MAAM,CAACQ,eAAe,GAAK,CAAC,CAAE,CAChCR,MAAM,CAACU,UAAU,CAAC,CAAC,CACrB,CACF,CACF,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}