{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"delayLongPress\",\"extraButtonProps\"];function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import GenericTouchable from'./GenericTouchable';var TouchableWithoutFeedback=React.forwardRef(function(_ref,ref){var _ref$delayLongPress=_ref.delayLongPress,delayLongPress=_ref$delayLongPress===void 0?600:_ref$delayLongPress,_ref$extraButtonProps=_ref.extraButtonProps,extraButtonProps=_ref$extraButtonProps===void 0?{rippleColor:'transparent',exclusive:true}:_ref$extraButtonProps,rest=_objectWithoutProperties(_ref,_excluded);return React.createElement(GenericTouchable,_extends({ref:ref,delayLongPress:delayLongPress,extraButtonProps:extraButtonProps},rest));});export default TouchableWithoutFeedback;","map":{"version":3,"names":["React","GenericTouchable","TouchableWithoutFeedback","forwardRef","_ref","ref","_ref$delayLongPress","delayLongPress","_ref$extraButtonProps","extraButtonProps","rippleColor","exclusive","rest","_objectWithoutProperties","_excluded","createElement","_extends"],"sources":["C:\\Users\\Jorn\\Documents\\hitster\\node_modules\\react-native-gesture-handler\\lib\\module\\components\\touchables\\TouchableWithoutFeedback.tsx"],"sourcesContent":["import * as React from 'react';\nimport { PropsWithChildren } from 'react';\nimport GenericTouchable from './GenericTouchable';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\n\n/**\n * @deprecated TouchableWithoutFeedback will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nexport type TouchableWithoutFeedbackProps = GenericTouchableProps;\n\n/**\n * @deprecated TouchableWithoutFeedback will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nconst TouchableWithoutFeedback = React.forwardRef<\n  GenericTouchable,\n  PropsWithChildren<TouchableWithoutFeedbackProps>\n>(\n  (\n    {\n      delayLongPress = 600,\n      extraButtonProps = {\n        rippleColor: 'transparent',\n        exclusive: true,\n      },\n      ...rest\n    },\n\n    ref\n  ) => (\n    <GenericTouchable\n      ref={ref}\n      delayLongPress={delayLongPress}\n      extraButtonProps={extraButtonProps}\n      {...rest}\n    />\n  )\n);\n\nexport default TouchableWithoutFeedback;\n"],"mappings":"gaAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,MAAO,CAAAC,gBAAP,KAA6B,oBAA7B,CAWA,GAAM,CAAAC,wBAAwB,CAAGF,KAAK,CAACG,UAAN,CAI/B,SAAAC,IAAA,CAUEC,GAVF,MAAAC,mBAAA,CAAAF,IAAA,CAEIG,cAAc,CAAdA,cAAc,CAAAD,mBAAA,UAAG,GADnB,CAAAA,mBAAA,CAAAE,qBAAA,CAAAJ,IAAA,CAEEK,gBAAgB,CAAhBA,gBAAgB,CAAAD,qBAAA,UAAG,CACjBE,WAAW,CAAE,aADI,CAEjBC,SAAS,CAAE,IAFM,CAFrB,CAAAH,qBAAA,CAMKI,IAAA,CAAAC,wBAAA,CAAAT,IAAA,CAAAU,SAAA,QAKL,CAAAd,KAAA,CAAAe,aAAA,CAACd,gBAAD,CAAAe,QAAA,EACEX,GAAG,CAAEA,GADP,CAEEE,cAAc,CAAEA,cAFlB,CAGEE,gBAAgB,CAAEA,gBAHpB,EAIMG,IAJN,EAhB6B,GAAjC,CAyBA,cAAe,CAAAV,wBAAf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}