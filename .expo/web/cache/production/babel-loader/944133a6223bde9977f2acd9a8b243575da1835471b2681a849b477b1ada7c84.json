{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}function _superPropGet(t,o,e,r){var p=_get(_getPrototypeOf(1&r?t.prototype:t),o,e);return 2&r&&\"function\"==typeof p?function(t){return p.apply(e,t);}:p;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import EventManager from'./EventManager';import{MouseButton}from'../../handlers/gestureHandlerCommon';import{EventTypes}from'../interfaces';import{PointerTypeMapping,calculateViewScale,tryExtractStylusData,isPointerInBounds}from'../utils';import{PointerType}from'../../PointerType';var POINTER_CAPTURE_EXCLUDE_LIST=new Set(['SELECT','INPUT']);var PointerEventManager=function(_EventManager){function PointerEventManager(view){var _this;_classCallCheck(this,PointerEventManager);_this=_callSuper(this,PointerEventManager,[view]);_defineProperty(_this,\"trackedPointers\",new Set());_defineProperty(_this,\"mouseButtonsMapper\",new Map());_defineProperty(_this,\"lastPosition\",void 0);_defineProperty(_this,\"pointerDownCallback\",function(event){if(!isPointerInBounds(_this.view,{x:event.clientX,y:event.clientY})){return;}var adaptedEvent=_this.mapEvent(event,EventTypes.DOWN);var target=event.target;if(!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)){target.setPointerCapture(adaptedEvent.pointerId);}_this.markAsInBounds(adaptedEvent.pointerId);_this.trackedPointers.add(adaptedEvent.pointerId);if(++_this.activePointersCounter>1){adaptedEvent.eventType=EventTypes.ADDITIONAL_POINTER_DOWN;_this.onPointerAdd(adaptedEvent);}else{_this.onPointerDown(adaptedEvent);}});_defineProperty(_this,\"pointerUpCallback\",function(event){if(_this.activePointersCounter===0){return;}var adaptedEvent=_this.mapEvent(event,EventTypes.UP);var target=event.target;if(!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)){target.releasePointerCapture(adaptedEvent.pointerId);}_this.markAsOutOfBounds(adaptedEvent.pointerId);_this.trackedPointers.delete(adaptedEvent.pointerId);if(--_this.activePointersCounter>0){adaptedEvent.eventType=EventTypes.ADDITIONAL_POINTER_UP;_this.onPointerRemove(adaptedEvent);}else{_this.onPointerUp(adaptedEvent);}});_defineProperty(_this,\"pointerMoveCallback\",function(event){var adaptedEvent=_this.mapEvent(event,EventTypes.MOVE);var target=event.target;if(!target.hasPointerCapture(event.pointerId)&&!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)){target.setPointerCapture(event.pointerId);}var inBounds=isPointerInBounds(_this.view,{x:adaptedEvent.x,y:adaptedEvent.y});var pointerIndex=_this.pointersInBounds.indexOf(adaptedEvent.pointerId);if(inBounds){if(pointerIndex<0){adaptedEvent.eventType=EventTypes.ENTER;_this.onPointerEnter(adaptedEvent);_this.markAsInBounds(adaptedEvent.pointerId);}else{_this.onPointerMove(adaptedEvent);}}else{if(pointerIndex>=0){adaptedEvent.eventType=EventTypes.LEAVE;_this.onPointerLeave(adaptedEvent);_this.markAsOutOfBounds(adaptedEvent.pointerId);}else{_this.onPointerOutOfBounds(adaptedEvent);}}_this.lastPosition.x=event.x;_this.lastPosition.y=event.y;});_defineProperty(_this,\"pointerCancelCallback\",function(event){var adaptedEvent=_this.mapEvent(event,EventTypes.CANCEL);_this.onPointerCancel(adaptedEvent);_this.markAsOutOfBounds(adaptedEvent.pointerId);_this.activePointersCounter=0;_this.trackedPointers.clear();});_defineProperty(_this,\"pointerEnterCallback\",function(event){var adaptedEvent=_this.mapEvent(event,EventTypes.ENTER);_this.onPointerMoveOver(adaptedEvent);});_defineProperty(_this,\"pointerLeaveCallback\",function(event){var adaptedEvent=_this.mapEvent(event,EventTypes.LEAVE);_this.onPointerMoveOut(adaptedEvent);});_defineProperty(_this,\"lostPointerCaptureCallback\",function(event){var adaptedEvent=_this.mapEvent(event,EventTypes.CANCEL);if(_this.trackedPointers.has(adaptedEvent.pointerId)){_this.onPointerCancel(adaptedEvent);_this.activePointersCounter=0;_this.trackedPointers.clear();}});_this.mouseButtonsMapper.set(0,MouseButton.LEFT);_this.mouseButtonsMapper.set(1,MouseButton.MIDDLE);_this.mouseButtonsMapper.set(2,MouseButton.RIGHT);_this.mouseButtonsMapper.set(3,MouseButton.BUTTON_4);_this.mouseButtonsMapper.set(4,MouseButton.BUTTON_5);_this.lastPosition={x:-Infinity,y:-Infinity};return _this;}_inherits(PointerEventManager,_EventManager);return _createClass(PointerEventManager,[{key:\"registerListeners\",value:function registerListeners(){this.view.addEventListener('pointerdown',this.pointerDownCallback);this.view.addEventListener('pointerup',this.pointerUpCallback);this.view.addEventListener('pointermove',this.pointerMoveCallback);this.view.addEventListener('pointercancel',this.pointerCancelCallback);this.view.addEventListener('pointerenter',this.pointerEnterCallback);this.view.addEventListener('pointerleave',this.pointerLeaveCallback);this.view.addEventListener('lostpointercapture',this.lostPointerCaptureCallback);}},{key:\"unregisterListeners\",value:function unregisterListeners(){this.view.removeEventListener('pointerdown',this.pointerDownCallback);this.view.removeEventListener('pointerup',this.pointerUpCallback);this.view.removeEventListener('pointermove',this.pointerMoveCallback);this.view.removeEventListener('pointercancel',this.pointerCancelCallback);this.view.removeEventListener('pointerenter',this.pointerEnterCallback);this.view.removeEventListener('pointerleave',this.pointerLeaveCallback);this.view.removeEventListener('lostpointercapture',this.lostPointerCaptureCallback);}},{key:\"mapEvent\",value:function mapEvent(event,eventType){var _PointerTypeMapping$g;var rect=this.view.getBoundingClientRect();var _calculateViewScale=calculateViewScale(this.view),scaleX=_calculateViewScale.scaleX,scaleY=_calculateViewScale.scaleY;return{x:event.clientX,y:event.clientY,offsetX:(event.clientX-rect.left)/scaleX,offsetY:(event.clientY-rect.top)/scaleY,pointerId:event.pointerId,eventType:eventType,pointerType:(_PointerTypeMapping$g=PointerTypeMapping.get(event.pointerType))!==null&&_PointerTypeMapping$g!==void 0?_PointerTypeMapping$g:PointerType.OTHER,button:this.mouseButtonsMapper.get(event.button),time:event.timeStamp,stylusData:tryExtractStylusData(event)};}},{key:\"resetManager\",value:function resetManager(){_superPropGet(PointerEventManager,\"resetManager\",this,3)([]);this.trackedPointers.clear();}}]);}(EventManager);export{PointerEventManager as default};","map":{"version":3,"names":["EventManager","MouseButton","EventTypes","PointerTypeMapping","calculateViewScale","tryExtractStylusData","isPointerInBounds","PointerType","POINTER_CAPTURE_EXCLUDE_LIST","Set","PointerEventManager","_EventManager","view","_this","_classCallCheck","_callSuper","_defineProperty","Map","event","x","clientX","y","clientY","adaptedEvent","mapEvent","DOWN","target","has","tagName","setPointerCapture","pointerId","markAsInBounds","trackedPointers","add","activePointersCounter","eventType","ADDITIONAL_POINTER_DOWN","onPointerAdd","onPointerDown","UP","releasePointerCapture","markAsOutOfBounds","delete","ADDITIONAL_POINTER_UP","onPointerRemove","onPointerUp","MOVE","hasPointerCapture","inBounds","pointerIndex","pointersInBounds","indexOf","ENTER","onPointerEnter","onPointerMove","LEAVE","onPointerLeave","onPointerOutOfBounds","lastPosition","CANCEL","onPointerCancel","clear","onPointerMoveOver","onPointerMoveOut","mouseButtonsMapper","set","LEFT","MIDDLE","RIGHT","BUTTON_4","BUTTON_5","Infinity","_inherits","_createClass","key","value","registerListeners","addEventListener","pointerDownCallback","pointerUpCallback","pointerMoveCallback","pointerCancelCallback","pointerEnterCallback","pointerLeaveCallback","lostPointerCaptureCallback","unregisterListeners","removeEventListener","_PointerTypeMapping$g","rect","getBoundingClientRect","_calculateViewScale","scaleX","scaleY","offsetX","left","offsetY","top","pointerType","get","OTHER","button","time","timeStamp","stylusData","resetManager","_superPropGet","default"],"sources":["C:\\Users\\Jorn\\Documents\\hitster\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\PointerEventManager.ts"],"sourcesContent":["import EventManager from './EventManager';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport { AdaptedEvent, EventTypes, Point } from '../interfaces';\nimport {\n  PointerTypeMapping,\n  calculateViewScale,\n  tryExtractStylusData,\n  isPointerInBounds,\n} from '../utils';\nimport { PointerType } from '../../PointerType';\n\nconst POINTER_CAPTURE_EXCLUDE_LIST = new Set<string>(['SELECT', 'INPUT']);\n\nexport default class PointerEventManager extends EventManager<HTMLElement> {\n  private trackedPointers = new Set<number>();\n  private readonly mouseButtonsMapper = new Map<number, MouseButton>();\n  private lastPosition: Point;\n\n  constructor(view: HTMLElement) {\n    super(view);\n\n    this.mouseButtonsMapper.set(0, MouseButton.LEFT);\n    this.mouseButtonsMapper.set(1, MouseButton.MIDDLE);\n    this.mouseButtonsMapper.set(2, MouseButton.RIGHT);\n    this.mouseButtonsMapper.set(3, MouseButton.BUTTON_4);\n    this.mouseButtonsMapper.set(4, MouseButton.BUTTON_5);\n\n    this.lastPosition = {\n      x: -Infinity,\n      y: -Infinity,\n    };\n  }\n\n  private pointerDownCallback = (event: PointerEvent) => {\n    if (!isPointerInBounds(this.view, { x: event.clientX, y: event.clientY })) {\n      return;\n    }\n\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.DOWN);\n    const target = event.target as HTMLElement;\n\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.setPointerCapture(adaptedEvent.pointerId);\n    }\n\n    this.markAsInBounds(adaptedEvent.pointerId);\n    this.trackedPointers.add(adaptedEvent.pointerId);\n\n    if (++this.activePointersCounter > 1) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n      this.onPointerAdd(adaptedEvent);\n    } else {\n      this.onPointerDown(adaptedEvent);\n    }\n  };\n\n  private pointerUpCallback = (event: PointerEvent) => {\n    // When we call reset on gesture handlers, it also resets their event managers\n    // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n    // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n    // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n    if (this.activePointersCounter === 0) {\n      return;\n    }\n\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.UP);\n    const target = event.target as HTMLElement;\n\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.releasePointerCapture(adaptedEvent.pointerId);\n    }\n\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.trackedPointers.delete(adaptedEvent.pointerId);\n\n    if (--this.activePointersCounter > 0) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n      this.onPointerRemove(adaptedEvent);\n    } else {\n      this.onPointerUp(adaptedEvent);\n    }\n  };\n\n  private pointerMoveCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.MOVE);\n    const target = event.target as HTMLElement;\n\n    // You may be wondering why are we setting pointer capture here, when we\n    // already set it in `pointerdown` handler. Well, that's a great question,\n    // for which I don't have an answer. Specification (https://www.w3.org/TR/pointerevents2/#dom-element-setpointercapture)\n    // says that the requirement for `setPointerCapture` to work is that pointer\n    // must be in 'active buttons state`, otherwise it will fail silently, which\n    // is lovely. Obviously, when `pointerdown` is fired, one of the buttons\n    // (when using mouse) is pressed, but that doesn't mean that `setPointerCapture`\n    // will succeed, for some reason. Since it fails silently, we don't actually know\n    // if it worked or not (there's `gotpointercapture` event, but the complexity of\n    // incorporating it here seems stupid), so we just call it again here, every time\n    // pointer moves until it succeeds.\n    // God, I do love web development.\n    if (\n      !target.hasPointerCapture(event.pointerId) &&\n      !POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)\n    ) {\n      target.setPointerCapture(event.pointerId);\n    }\n\n    const inBounds: boolean = isPointerInBounds(this.view, {\n      x: adaptedEvent.x,\n      y: adaptedEvent.y,\n    });\n\n    const pointerIndex: number = this.pointersInBounds.indexOf(\n      adaptedEvent.pointerId\n    );\n\n    if (inBounds) {\n      if (pointerIndex < 0) {\n        adaptedEvent.eventType = EventTypes.ENTER;\n        this.onPointerEnter(adaptedEvent);\n        this.markAsInBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerMove(adaptedEvent);\n      }\n    } else {\n      if (pointerIndex >= 0) {\n        adaptedEvent.eventType = EventTypes.LEAVE;\n        this.onPointerLeave(adaptedEvent);\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerOutOfBounds(adaptedEvent);\n      }\n    }\n\n    this.lastPosition.x = event.x;\n    this.lastPosition.y = event.y;\n  };\n\n  private pointerCancelCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n\n    this.onPointerCancel(adaptedEvent);\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.activePointersCounter = 0;\n    this.trackedPointers.clear();\n  };\n\n  private pointerEnterCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.ENTER);\n\n    this.onPointerMoveOver(adaptedEvent);\n  };\n\n  private pointerLeaveCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.LEAVE);\n\n    this.onPointerMoveOut(adaptedEvent);\n  };\n\n  private lostPointerCaptureCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n\n    if (this.trackedPointers.has(adaptedEvent.pointerId)) {\n      // In some cases the `pointerup` event is not fired, but `lostpointercapture` is.\n      // Here we simulate the `pointercancel` event to make sure the gesture handler stops tracking it.\n      this.onPointerCancel(adaptedEvent);\n\n      this.activePointersCounter = 0;\n      this.trackedPointers.clear();\n    }\n  };\n\n  public registerListeners(): void {\n    this.view.addEventListener('pointerdown', this.pointerDownCallback);\n    this.view.addEventListener('pointerup', this.pointerUpCallback);\n    this.view.addEventListener('pointermove', this.pointerMoveCallback);\n    this.view.addEventListener('pointercancel', this.pointerCancelCallback);\n\n    // onPointerEnter and onPointerLeave are triggered by a custom logic responsible for\n    // handling shouldCancelWhenOutside flag, and are unreliable unless the pointer is down.\n    // We therefore use pointerenter and pointerleave events to handle the hover gesture,\n    // mapping them to onPointerMoveOver and onPointerMoveOut respectively.\n    this.view.addEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.addEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.addEventListener(\n      'lostpointercapture',\n      this.lostPointerCaptureCallback\n    );\n  }\n\n  public unregisterListeners(): void {\n    this.view.removeEventListener('pointerdown', this.pointerDownCallback);\n    this.view.removeEventListener('pointerup', this.pointerUpCallback);\n    this.view.removeEventListener('pointermove', this.pointerMoveCallback);\n    this.view.removeEventListener('pointercancel', this.pointerCancelCallback);\n    this.view.removeEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.removeEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.removeEventListener(\n      'lostpointercapture',\n      this.lostPointerCaptureCallback\n    );\n  }\n\n  protected mapEvent(event: PointerEvent, eventType: EventTypes): AdaptedEvent {\n    const rect = this.view.getBoundingClientRect();\n    const { scaleX, scaleY } = calculateViewScale(this.view);\n\n    return {\n      x: event.clientX,\n      y: event.clientY,\n      offsetX: (event.clientX - rect.left) / scaleX,\n      offsetY: (event.clientY - rect.top) / scaleY,\n      pointerId: event.pointerId,\n      eventType: eventType,\n      pointerType:\n        PointerTypeMapping.get(event.pointerType) ?? PointerType.OTHER,\n      button: this.mouseButtonsMapper.get(event.button),\n      time: event.timeStamp,\n      stylusData: tryExtractStylusData(event),\n    };\n  }\n\n  public resetManager(): void {\n    super.resetManager();\n    this.trackedPointers.clear();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}