{"ast":null,"code":"'use strict';import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";var _excluded=[\"transform\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{convertAnimationObjectToKeyframes}from\"./animationParser.js\";import{AnimationsData,TransitionType}from\"./config.js\";import{insertWebAnimation}from\"./domUtils.js\";import{CurvedTransition}from\"./transition/Curved.web.js\";import{EntryExitTransition}from\"./transition/EntryExit.web.js\";import{FadingTransition}from\"./transition/Fading.web.js\";import{JumpingTransition}from\"./transition/Jumping.web.js\";import{LinearTransition}from\"./transition/Linear.web.js\";import{SequencedTransition}from\"./transition/Sequenced.web.js\";function addPxToTransform(transform){var newTransform=transform.map(function(transformProp){var newTransformProp={};for(var _ref of Object.entries(transformProp)){var _ref2=_slicedToArray(_ref,2);var key=_ref2[0];var value=_ref2[1];if((key.includes('translate')||key.includes('perspective'))&&typeof value==='number'){newTransformProp[key]=`${value}px`;}else{newTransformProp[key]=value;}}return newTransformProp;});return newTransform;}export function createCustomKeyFrameAnimation(keyframeDefinitions){for(var value of Object.values(keyframeDefinitions)){if(value.transform){value.transform=addPxToTransform(value.transform);}}var animationData={name:'',style:keyframeDefinitions,duration:-1};animationData.name=generateNextCustomKeyframeName();var parsedKeyframe=convertAnimationObjectToKeyframes(animationData);insertWebAnimation(animationData.name,parsedKeyframe);return animationData.name;}export function createAnimationWithInitialValues(animationName,initialValues){var animationStyle=structuredClone(AnimationsData[animationName].style);var firstAnimationStep=animationStyle['0'];var transform=initialValues.transform,rest=_objectWithoutProperties(initialValues,_excluded);if(transform){var transformWithPx=addPxToTransform(transform);if(!firstAnimationStep.transform){firstAnimationStep.transform=transformWithPx;}else{var transformStyle=new Map();for(var rule of firstAnimationStep.transform){for(var _ref3 of Object.entries(rule)){var _ref4=_slicedToArray(_ref3,2);var property=_ref4[0];var value=_ref4[1];transformStyle.set(property,value);}}for(var _rule of transformWithPx){for(var _ref5 of Object.entries(_rule)){var _ref6=_slicedToArray(_ref5,2);var _property=_ref6[0];var _value=_ref6[1];transformStyle.set(_property,_value);}}firstAnimationStep.transform=Array.from(transformStyle,function(_ref7){var _ref8=_slicedToArray(_ref7,2),property=_ref8[0],value=_ref8[1];return _defineProperty({},property,value);});}}animationStyle['0']=_objectSpread(_objectSpread({},animationStyle['0']),rest);var keyframeName=generateNextCustomKeyframeName();var animationObject={name:keyframeName,style:animationStyle,duration:AnimationsData[animationName].duration};var keyframe=convertAnimationObjectToKeyframes(animationObject);insertWebAnimation(keyframeName,keyframe);return keyframeName;}var customKeyframeCounter=0;function generateNextCustomKeyframeName(){return`REA${customKeyframeCounter++}`;}export function TransitionGenerator(transitionType,transitionData){var transitionKeyframeName=generateNextCustomKeyframeName();var dummyTransitionKeyframeName;var transitionObject;switch(transitionType){case TransitionType.LINEAR:transitionObject=LinearTransition(transitionKeyframeName,transitionData);break;case TransitionType.SEQUENCED:transitionObject=SequencedTransition(transitionKeyframeName,transitionData);break;case TransitionType.FADING:transitionObject=FadingTransition(transitionKeyframeName,transitionData);break;case TransitionType.JUMPING:transitionObject=JumpingTransition(transitionKeyframeName,transitionData);break;case TransitionType.CURVED:{dummyTransitionKeyframeName=generateNextCustomKeyframeName();var _CurvedTransition=CurvedTransition(transitionKeyframeName,dummyTransitionKeyframeName,transitionData),firstKeyframeObj=_CurvedTransition.firstKeyframeObj,secondKeyframeObj=_CurvedTransition.secondKeyframeObj;transitionObject=firstKeyframeObj;var dummyKeyframe=convertAnimationObjectToKeyframes(secondKeyframeObj);insertWebAnimation(dummyTransitionKeyframeName,dummyKeyframe);break;}case TransitionType.ENTRY_EXIT:transitionObject=EntryExitTransition(transitionKeyframeName,transitionData);break;}var transitionKeyframe=convertAnimationObjectToKeyframes(transitionObject);insertWebAnimation(transitionKeyframeName,transitionKeyframe);return{transitionKeyframeName:transitionKeyframeName,dummyTransitionKeyframeName:dummyTransitionKeyframeName};}","map":{"version":3,"names":["_defineProperty","_objectWithoutProperties","_slicedToArray","_excluded","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","convertAnimationObjectToKeyframes","AnimationsData","TransitionType","insertWebAnimation","CurvedTransition","EntryExitTransition","FadingTransition","JumpingTransition","LinearTransition","SequencedTransition","addPxToTransform","transform","newTransform","map","transformProp","newTransformProp","_ref","entries","_ref2","key","value","includes","createCustomKeyFrameAnimation","keyframeDefinitions","values","animationData","name","style","duration","generateNextCustomKeyframeName","parsedKeyframe","createAnimationWithInitialValues","animationName","initialValues","animationStyle","structuredClone","firstAnimationStep","rest","transformWithPx","transformStyle","Map","rule","_ref3","_ref4","property","set","_ref5","_ref6","Array","from","_ref7","_ref8","keyframeName","animationObject","keyframe","customKeyframeCounter","TransitionGenerator","transitionType","transitionData","transitionKeyframeName","dummyTransitionKeyframeName","transitionObject","LINEAR","SEQUENCED","FADING","JUMPING","CURVED","_CurvedTransition","firstKeyframeObj","secondKeyframeObj","dummyKeyframe","ENTRY_EXIT","transitionKeyframe"],"sources":["C:\\Users\\Jorn\\Documents\\hitster\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\web\\createAnimation.ts"],"sourcesContent":["'use strict';\n\nimport type { TransformsStyle } from 'react-native';\n\nimport type {\n  AnimationData,\n  ReanimatedWebTransformProperties,\n  TransitionData,\n} from './animationParser';\nimport { convertAnimationObjectToKeyframes } from './animationParser';\nimport type { InitialValuesStyleProps, KeyframeDefinitions } from './config';\nimport { AnimationsData, TransitionType } from './config';\nimport { insertWebAnimation } from './domUtils';\nimport { CurvedTransition } from './transition/Curved.web';\nimport { EntryExitTransition } from './transition/EntryExit.web';\nimport { FadingTransition } from './transition/Fading.web';\nimport { JumpingTransition } from './transition/Jumping.web';\nimport { LinearTransition } from './transition/Linear.web';\nimport { SequencedTransition } from './transition/Sequenced.web';\n\ntype TransformType = NonNullable<TransformsStyle['transform']>;\n\n// Translate values are passed as numbers. However, if `translate` property receives number, it will not automatically\n// convert it to `px`. Therefore if we want to keep transform we have to add 'px' suffix to each of translate values\n// that are present inside transform.\n//\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction addPxToTransform(transform: TransformType) {\n  type RNTransformProp = (typeof transform)[number];\n\n  // @ts-ignore `existingTransform` cannot be string because in that case\n  // we throw error in `extractTransformFromStyle`\n  const newTransform = transform.map((transformProp: RNTransformProp) => {\n    const newTransformProp: ReanimatedWebTransformProperties = {};\n    for (const [key, value] of Object.entries(transformProp)) {\n      if (\n        (key.includes('translate') || key.includes('perspective')) &&\n        typeof value === 'number'\n      ) {\n        // @ts-ignore After many trials we decided to ignore this error - it says that we cannot use 'key' to index this object.\n        // Sadly it doesn't go away after using cast `key as keyof TransformProperties`.\n        newTransformProp[key] = `${value}px`;\n      } else {\n        // @ts-ignore same as above.\n        newTransformProp[key] = value;\n      }\n    }\n    return newTransformProp;\n  });\n\n  return newTransform;\n}\n\nexport function createCustomKeyFrameAnimation(\n  keyframeDefinitions: KeyframeDefinitions\n) {\n  for (const value of Object.values(keyframeDefinitions)) {\n    if (value.transform) {\n      value.transform = addPxToTransform(value.transform as TransformType);\n    }\n  }\n\n  const animationData: AnimationData = {\n    name: '',\n    style: keyframeDefinitions,\n    duration: -1,\n  };\n\n  animationData.name = generateNextCustomKeyframeName();\n\n  const parsedKeyframe = convertAnimationObjectToKeyframes(animationData);\n\n  insertWebAnimation(animationData.name, parsedKeyframe);\n\n  return animationData.name;\n}\n\nexport function createAnimationWithInitialValues(\n  animationName: string,\n  initialValues: InitialValuesStyleProps\n) {\n  const animationStyle = structuredClone(AnimationsData[animationName].style);\n  const firstAnimationStep = animationStyle['0'];\n\n  const { transform, ...rest } = initialValues;\n\n  if (transform) {\n    const transformWithPx = addPxToTransform(transform as TransformType);\n    // If there was no predefined transform, we can simply assign transform from `initialValues`.\n    if (!firstAnimationStep.transform) {\n      firstAnimationStep.transform = transformWithPx;\n    } else {\n      // Othwerwise we have to merge predefined transform with the one provided in `initialValues`.\n      // To do that, we create `Map` that will contain final transform.\n      const transformStyle = new Map<string, any>();\n\n      // First we assign all of the predefined rules\n      for (const rule of firstAnimationStep.transform) {\n        // In most cases there will be just one iteration\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Then we either add new rule, or override one that already exists.\n      for (const rule of transformWithPx) {\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Finally, we convert `Map` with final transform back into array of objects.\n      firstAnimationStep.transform = Array.from(\n        transformStyle,\n        ([property, value]) => ({\n          [property]: value,\n        })\n      );\n    }\n  }\n\n  animationStyle['0'] = {\n    ...animationStyle['0'],\n    ...rest,\n  };\n\n  // TODO: Maybe we can extract the logic below into separate function\n  const keyframeName = generateNextCustomKeyframeName();\n\n  const animationObject: AnimationData = {\n    name: keyframeName,\n    style: animationStyle,\n    duration: AnimationsData[animationName].duration,\n  };\n\n  const keyframe = convertAnimationObjectToKeyframes(animationObject);\n\n  insertWebAnimation(keyframeName, keyframe);\n\n  return keyframeName;\n}\n\nlet customKeyframeCounter = 0;\n\nfunction generateNextCustomKeyframeName() {\n  return `REA${customKeyframeCounter++}`;\n}\n\n/**\n * Creates transition of given type, appends it to stylesheet and returns\n * keyframe name.\n *\n * @param transitionType - Type of transition (e.g. LINEAR).\n * @param transitionData - Object containing data for transforms (translateX,\n *   scaleX,...).\n * @returns Keyframe name that represents transition.\n */\nexport function TransitionGenerator(\n  transitionType: TransitionType,\n  transitionData: TransitionData\n) {\n  const transitionKeyframeName = generateNextCustomKeyframeName();\n  let dummyTransitionKeyframeName;\n\n  let transitionObject;\n\n  switch (transitionType) {\n    case TransitionType.LINEAR:\n      transitionObject = LinearTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.SEQUENCED:\n      transitionObject = SequencedTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.FADING:\n      transitionObject = FadingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.JUMPING:\n      transitionObject = JumpingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n\n    // Here code block with {} is necessary because of eslint\n    case TransitionType.CURVED: {\n      dummyTransitionKeyframeName = generateNextCustomKeyframeName();\n\n      const { firstKeyframeObj, secondKeyframeObj } = CurvedTransition(\n        transitionKeyframeName,\n        dummyTransitionKeyframeName,\n        transitionData\n      );\n\n      transitionObject = firstKeyframeObj;\n\n      const dummyKeyframe =\n        convertAnimationObjectToKeyframes(secondKeyframeObj);\n\n      insertWebAnimation(dummyTransitionKeyframeName, dummyKeyframe);\n\n      break;\n    }\n    case TransitionType.ENTRY_EXIT:\n      transitionObject = EntryExitTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n  }\n\n  const transitionKeyframe =\n    convertAnimationObjectToKeyframes(transitionObject);\n\n  insertWebAnimation(transitionKeyframeName, transitionKeyframe);\n\n  return { transitionKeyframeName, dummyTransitionKeyframeName };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}