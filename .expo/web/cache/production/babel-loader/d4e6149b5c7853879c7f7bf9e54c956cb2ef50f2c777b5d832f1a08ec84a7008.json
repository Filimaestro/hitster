{"ast":null,"code":"'use strict';import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import{useEffect,useRef}from'react';import{initialUpdaterRun}from\"../animation/index.js\";import{makeMutable,startMapper,stopMapper}from\"../core.js\";import{shouldBeUseWeb}from\"../PlatformChecker.js\";var _worklet_6792802823485_init_data={code:\"function useDerivedValueJs1(){const{sharedValue,updater}=this.__closure;sharedValue.value=updater();}\"};export function useDerivedValue(updater,dependencies){var _updater$__closure;var initRef=useRef(null);var inputs=Object.values((_updater$__closure=updater.__closure)!=null?_updater$__closure:{});if(shouldBeUseWeb()){var _dependencies;if(!inputs.length&&(_dependencies=dependencies)!=null&&_dependencies.length){inputs=dependencies;}}if(dependencies===undefined){dependencies=[].concat(_toConsumableArray(inputs),[updater.__workletHash]);}else{dependencies.push(updater.__workletHash);}if(initRef.current===null){initRef.current=makeMutable(initialUpdaterRun(updater));}var sharedValue=initRef.current;useEffect(function(){var fun=function(){var useDerivedValueJs1=function useDerivedValueJs1(){sharedValue.value=updater();};useDerivedValueJs1.__closure={sharedValue:sharedValue,updater:updater};useDerivedValueJs1.__workletHash=6792802823485;useDerivedValueJs1.__initData=_worklet_6792802823485_init_data;return useDerivedValueJs1;}();var mapperId=startMapper(fun,inputs,[sharedValue]);return function(){stopMapper(mapperId);};},dependencies);return sharedValue;}","map":{"version":3,"names":["_toConsumableArray","useEffect","useRef","initialUpdaterRun","makeMutable","startMapper","stopMapper","shouldBeUseWeb","_worklet_6792802823485_init_data","code","useDerivedValue","updater","dependencies","_updater$__closure","initRef","inputs","Object","values","__closure","_dependencies","length","undefined","concat","__workletHash","push","current","sharedValue","fun","useDerivedValueJs1","value","__initData","mapperId"],"sources":["C:\\Users\\Jorn\\Documents\\hitster\\node_modules\\react-native-reanimated\\src\\hook\\useDerivedValue.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\n\nimport { initialUpdaterRun } from '../animation';\nimport type { SharedValue, WorkletFunction } from '../commonTypes';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nimport { shouldBeUseWeb } from '../PlatformChecker';\nimport type { DependencyList } from './commonTypes';\n\nexport interface DerivedValue<Value = unknown>\n  extends Readonly<Omit<SharedValue<Value>, 'set'>> {\n  /**\n   * @deprecated Derived values are readonly, don't use this method. It's here\n   *   only to prevent breaking changes in TypeScript types. It will be removed\n   *   in the future.\n   */\n  set: SharedValue<Value>['set'];\n}\n\n/**\n * Lets you create new shared values based on existing ones while keeping them\n * reactive.\n *\n * @param updater - A function called whenever at least one of the shared values\n *   or state used in the function body changes.\n * @param dependencies - An optional array of dependencies. Only relevant when\n *   using Reanimated without the Babel plugin on the Web.\n * @returns A new readonly shared value based on a value returned from the\n *   updater function\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useDerivedValue\n */\n// @ts-expect-error This overload is required by our API.\nexport function useDerivedValue<Value>(\n  updater: () => Value,\n  dependencies?: DependencyList\n): DerivedValue<Value>;\n\nexport function useDerivedValue<Value>(\n  updater: WorkletFunction<[], Value>,\n  dependencies?: DependencyList\n): DerivedValue<Value> {\n  const initRef = useRef<SharedValue<Value> | null>(null);\n  let inputs = Object.values(updater.__closure ?? {});\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n  }\n\n  // build dependencies\n  if (dependencies === undefined) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(updater));\n  }\n\n  const sharedValue: SharedValue<Value> = initRef.current;\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      sharedValue.value = updater();\n    };\n    const mapperId = startMapper(fun, inputs, [\n      sharedValue as SharedValue<unknown>,\n    ]);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  return sharedValue;\n}\n"],"mappings":"AAAA,YAAY,QAAAA,kBAAA,gDACZ,OAASC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAEzC,OAASC,iBAAiB,KAAQ,uBAAc,CAEhD,OAASC,WAAW,CAAEC,WAAW,CAAEC,UAAU,KAAQ,YAAS,CAC9D,OAASC,cAAc,KAAQ,uBAAoB,KAAAC,gCAAA,EAAAC,IAAA,0GA+BnD,MAAO,SAAS,CAAAC,eAAeA,CAC7BC,OAAmC,CACnCC,YAA6B,CACR,KAAAC,kBAAA,CACrB,GAAM,CAAAC,OAAO,CAAGZ,MAAM,CAA4B,IAAI,CAAC,CACvD,GAAI,CAAAa,MAAM,CAAGC,MAAM,CAACC,MAAM,EAAAJ,kBAAA,CAACF,OAAO,CAACO,SAAS,QAAAL,kBAAA,CAAI,CAAC,CAAC,CAAC,CACnD,GAAIN,cAAc,CAAC,CAAC,CAAE,KAAAY,aAAA,CACpB,GAAI,CAACJ,MAAM,CAACK,MAAM,GAAAD,aAAA,CAAIP,YAAY,SAAZO,aAAA,CAAcC,MAAM,CAAE,CAE1CL,MAAM,CAAGH,YAAY,CACvB,CACF,CAGA,GAAIA,YAAY,GAAKS,SAAS,CAAE,CAC9BT,YAAY,IAAAU,MAAA,CAAAtB,kBAAA,CAAOe,MAAM,GAAEJ,OAAO,CAACY,aAAa,EAAC,CACnD,CAAC,IAAM,CACLX,YAAY,CAACY,IAAI,CAACb,OAAO,CAACY,aAAa,CAAC,CAC1C,CAEA,GAAIT,OAAO,CAACW,OAAO,GAAK,IAAI,CAAE,CAC5BX,OAAO,CAACW,OAAO,CAAGrB,WAAW,CAACD,iBAAiB,CAACQ,OAAO,CAAC,CAAC,CAC3D,CAEA,GAAM,CAAAe,WAA+B,CAAGZ,OAAO,CAACW,OAAO,CAEvDxB,SAAS,CAAC,UAAM,CACd,GAAM,CAAA0B,GAAG,CAAG,eAAAC,kBAAA,UAAAA,mBAAA,CAAM,CAEhBF,WAAW,CAACG,KAAK,CAAGlB,OAAO,CAAC,CAAC,CAC/B,CAAC,CAAAiB,kBAAA,CAAAV,SAAA,EAAAQ,WAAA,CADCA,WAAW,CAAAf,OAAA,CAASA,OAAO,EAAAiB,kBAAA,CAAAL,aAAA,eAAAK,kBAAA,CAAAE,UAAA,CAAAtB,gCAAA,QAAAoB,kBAAA,EAFjB,EAGX,CACD,GAAM,CAAAG,QAAQ,CAAG1B,WAAW,CAACsB,GAAG,CAAEZ,MAAM,CAAE,CACxCW,WAAW,CACZ,CAAC,CACF,MAAO,WAAM,CACXpB,UAAU,CAACyB,QAAQ,CAAC,CACtB,CAAC,CACH,CAAC,CAAEnB,YAAY,CAAC,CAEhB,MAAO,CAAAc,WAAW,CACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}